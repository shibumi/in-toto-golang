on: [push, pull_request]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.15.x]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Format Unix
      if: runner.os == 'Linux' || runner.os == 'MacOS'
      run: test -z $(go fmt ./...)
#    - name: Format Windows
#      if: runner.os == 'Windows'
#      run: if (gofmt -l ./...) { Write-Error "Use gofmt" }
    - name: Test
      run: go test -covermode atomic -coverprofile='profile.cov' ./...
    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        GO111MODULE=off go get github.com/mattn/goveralls
        $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github
